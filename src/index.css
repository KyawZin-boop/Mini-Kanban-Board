@tailwind base;
@tailwind components;
@tailwind utilities;

body{
  background-color: #ffffff;
  color: #005E9A;
  font-family: 'Poppins', sans-serif;
}

.loader {
	width: 55px;
	aspect-ratio: 1;
	--g1: conic-gradient(from 90deg at 3px 3px, #0000 90deg, #fff 0);
	--g2: conic-gradient(from -90deg at 22px 22px, #0000 90deg, #fff 0);
	background: var(--g1), var(--g1), var(--g1), var(--g2), var(--g2), var(--g2);
	background-size: 25px 25px;
	background-repeat: no-repeat;
	animation: l7 1.5s infinite;
}

@keyframes l7 {
	0% {
		background-position: 0 0, 0 100%, 100% 100%;
	}
	25% {
		background-position: 100% 0, 0 100%, 100% 100%;
	}
	50% {
		background-position: 100% 0, 0 0, 100% 100%;
	}
	75% {
		background-position: 100% 0, 0 0, 0 100%;
	}
	100% {
		background-position: 100% 100%, 0 0, 0 100%;
	}
}

.dot-pattern {
	width: 100%;
	height: 100%;
	/* Add your background pattern here */
	background-color: #ffffff;
	background-image: radial-gradient(rgba(12, 12, 12, 0.171) 2px, transparent 0);
	background-size: 30px 30px;
	background-position: -5px -5px;
}

/* From Uiverse.io by gharsh11032000 */ 
/* Hide the default checkbox */
.container input {
	position: absolute;
	opacity: 0;
	cursor: pointer;
	height: 0;
	width: 0;
  }
  
  .container {
	display: block;
	position: relative;
	cursor: pointer;
	font-size: 20px;
	user-select: none;
	width: 30px;
  }
  
  /* Create a custom checkbox */
  .checkmark {
	position: relative;
	top: 0;
	left: 0;
	height: 1.3em;
	width: 1.3em;
	border: 2px solid #414141;
	border-radius: 5px;
	transition: all 0.4s cubic-bezier(0.23, 1, 0.320, 1);
  }
  
  .container input:hover ~ .checkmark {
	border: 2px solid #0974f1;
  }
  
  /* When the checkbox is checked */
  .container input:checked ~ .checkmark {
	box-shadow: 0 0 20px rgba(9, 117, 241, 0.8);
	border: 2px solid #0974f1;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
	content: "";
	position: absolute;
	display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
	display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
	left: 0.45em;
	top: 0.25em;
	width: 0.25em;
	height: 0.5em;
	border: solid rgb(7, 167, 29);
	border-width: 0 0.15em 0.15em 0;
	transform: rotate(45deg);
  }

  /* From Uiverse.io by DellBee */ 
/* use it in dark theme */
.input-container {
	position: relative;
	margin: 50px auto;
	width: 190px;
  }
  
  .input-container input[type="text"] {
	font-size: 20px;
	color: rgb(255, 255, 255);
	border: none;
	border-bottom: 2px solid #a5a2a2;
	outline: none;
	width: 100%;
	background-color: transparent;
  }
  
  .label {
	transition: all 0.3s ease;
	color: #d3d2d2;
	position: absolute;
	top: 0;
	left: 0;
	pointer-events: none;
  }
  
  .input-container input[type="text"]:focus~.label,
		  .input-container input[type="text"]:valid~.label {
	top: -20px;
	transition: 0.3s;
	color: rgb(172, 46, 172);
  }
  
  .input-container .underline {
	position: absolute;
	bottom: 4px;
	left: -7px;
	height: 2px;
	width: 110%;
	background-color: rgb(172, 46, 172);
	transform: scaleX(0);
  }
  
  .input-container .sideline {
	position: relative;
	bottom: 15px;
	right: 18px;
	height: 2px;
	width: 18%;
	background-color: rgb(172, 46, 172);
	transform: scaleX(0);
	rotate: 90deg;
  }
  
  .input-container .upperline {
	position: absolute;
	bottom: 30px;
	left: -8px;
	height: 2px;
	width: 110%;
	background-color: rgb(172, 46, 172);
	transform: scaleX(0);
  }
  
  .input-container .line {
	position: relative;
	bottom: 17px;
	left: 178px;
	height: 2px;
	width: 18%;
	background-color: rgb(172, 46, 172);
	transform: scaleX(0);
	rotate: 90deg;
  }
  
  .input-container input[type="text"]:focus~.underline,
		  .input-container input[type="text"]:valid~.underline {
	transform: scaleX(1);
	transition: 1s;
  }
  
  .input-container input[type="text"]:focus~.sideline,
		  .input-container input[type="text"]:valid~.sideline {
	transform: scaleX(1);
	transition: 1s;
  }
  
  .input-container input[type="text"]:focus~.upperline,
		  .input-container input[type="text"]:valid~.upperline {
	transform: scaleX(1);
	transition: 1s;
  }
  
  .input-container input[type="text"]:focus~.line,
		  .input-container input[type="text"]:valid~.line {
	transform: scaleX(1);
	transition: 1s;
  }
  